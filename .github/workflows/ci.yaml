name: Golang CI

on:
  push:

env:
  go-version: "1.20"
  work-dir: "./src"
  image-name: "seion/gitops-workflow-sample"

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.go-version }}
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          working-directory: ${{ env.work-dir }}

  test:
    name: test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.work-dir }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.go-version }}
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run go test
        run: go test -v -cover ./...

  build-and-push:
    name: build and push
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ${{ env.work-dir }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: "${{ env.image-name }}:${{ github.sha }},${{ env.image-name }}:latest"

  auto-pr-dev:
    if: ${{ github.ref_name == 'develop' }}
    name: automatic PR
    runs-on: ubuntu-latest
    uses: ./.github/workflows/auto-pr-template.yaml
    with:
      target-dir: k8s/overlays/dev
      base-branch: ${{ github.ref_name }}
      branch: "feature/deploy-to-${{ github.ref_name }}"

  auto-pr-stg:
    if: ${{ github.ref_name == 'staging' }}
    name: automatic PR
    runs-on: ubuntu-latest
    uses: ./.github/workflows/auto-pr-template.yaml
    with:
      target-dir: k8s/overlays/stg
      base-branch: ${{ github.ref_name }}
      branch: "feature/deploy-to-${{ github.ref_name }}"

  auto-pr-prd:
    if: ${{ github.ref_name == 'main' }}
    name: automatic PR
    runs-on: ubuntu-latest
    uses: ./.github/workflows/auto-pr-template.yaml
    with:
      target-dir: k8s/overlays/prd
      base-branch: ${{ github.ref_name }}
      branch: "feature/deploy-to-${{ github.ref_name }}"